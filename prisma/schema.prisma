generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model ABTest {
  id                  Int             @id @default(autoincrement())
  title               String
  description         String?
  shop                String
  testType            String
  status              String          @default("draft")
  basePrice           Float
  baseTrafficPercent  Float
  totalTrafficPercent Float           @default(100.0)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  startedAt           DateTime?
  endedAt             DateTime?
  products            ABTestProduct[]
  variants            ABTestVariant[]

  @@map("ab_tests")
}

model ABTestProduct {
  id            Int    @id @default(autoincrement())
  abTestId      Int
  productId     String
  productTitle  String
  productHandle String
  basePrice     Float
  abTest        ABTest @relation(fields: [abTestId], references: [id], onDelete: Cascade)

  @@map("ab_test_products")
}

model ABTestVariant {
  id               Int     @id @default(autoincrement())
  abTestId         Int
  variantName      String
  price            Float
  discount         Float?
  trafficPercent   Float
  isBaseVariant    Boolean @default(false)
  variantProductId String? // Link variant to specific product in multi-product tests
  abTest           ABTest  @relation(fields: [abTestId], references: [id], onDelete: Cascade)
  viewEvents       ViewEvent[]
  conversionEvents ConversionEvent[]

  @@map("ab_test_variants")
}

model ViewEvent {
  id            Int      @id @default(autoincrement())
  productId     String
  variantId     Int?
  abTestId      Int?
  sessionId     String
  customerId    String?
  shop          String
  url           String
  price         Float
  isTestPrice   Boolean
  timestamp     DateTime @default(now())
  variant       ABTestVariant? @relation(fields: [variantId], references: [id])

  @@map("view_events")
}

model ConversionEvent {
  id            Int      @id @default(autoincrement())
  productId     String
  variantId     Int?
  abTestId      Int?
  sessionId     String
  customerId    String?
  shop          String
  url           String
  price         Float
  orderValue    Float?
  timestamp     DateTime @default(now())
  variant       ABTestVariant? @relation(fields: [variantId], references: [id])

  @@map("conversion_events")
}

model Settings {
  id                    Int     @id @default(autoincrement())
  shop                  String  @unique
  auto_install          String  @default("false")
  enable_cart_adjustment String @default("false")
  auto_rotation_enabled Boolean @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("settings")
}
